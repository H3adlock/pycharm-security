<idea-plugin>
    <id>org.tonybaloney.security.pycharm-security</id>
    <name>Python Security</name>
    <vendor email="anthonyshaw@apache.org" url="http://tonybaloney.github.io">Anthony Shaw</vendor>

    <description><![CDATA[
    Analyzes potential security flaws in your Python code and suggests fixes. Designed to find common security issues in Python code.<br>
    Reports on installed packages and any known security reports. <br/>

    <h2>Features</h2>
    <ul>
     <li>Over 20 builtin code checks giving your contextual security warnings in your code</li>
     <li>Misconfiguration warnings for Django and Flask web frameworks</li>
     <li>Cross-Site-Scripting detection for both Jinja2 and Mako templating engines</li>
     <li>SQL Injection detection in all Python string formats</li>
     <li>Automatic reporting of known vulnerabilities and CVEs in your installed Python Packages within PyCharm</li>
     <li>Detection of security flaws and misconfiguration in 3rd party libraries like Jinja2, Paramiko and Mako</li>
     <li>Can be used to scan large code bases with inspection profiles</li>
     <li>Configurable alert levels and warning suppression by file, line, or project</li>
     <li>Scan code in your CI/CD using Docker</li>
    </ul>
    ]]></description>
    <idea-version since-build="193" until-build="201.*" />
    
    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.python</depends>

    <extensions defaultExtensionNs="com.intellij">
        <backgroundPostStartupActivity implementation="security.packaging.PythonPackageVulnerabilityStartupTask"/>
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="YML100: Use of unsafe yaml load" shortName="PyyamlLoadInspection" implementationClass="security.validators.PyyamlLoadInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="DJG100: Use of Django debug mode" shortName="DjangoDebugModeSettingsInspection" implementationClass="security.validators.DjangoDebugModeSettingsInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="DJG200, DJG201: Missing Django Middleware" shortName="DjangoMiddlewareInspection" implementationClass="security.validators.DjangoMiddlewareInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="FLK100: Use of Flask debug mode" shortName="FlaskDebugModeInspection" implementationClass="security.validators.FlaskDebugModeInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="RQ101: Setting verify=False when using httpx" shortName="HttpxNoVerifyInspection" implementationClass="security.validators.HttpxNoVerifyInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="RQ100: Setting verify=False when using requests" shortName="RequestsNoVerifyInspection" implementationClass="security.validators.RequestsNoVerifyInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="PR100: Running subprocesses with shell mode" shortName="SubprocessShellModeInspection" implementationClass="security.validators.SubprocessShellModeInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="TMP100: Use of unsafe tempfile.mktemp" shortName="TempfileMktempInspection" implementationClass="security.validators.TempfileMktempInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="HL100, HL101: Insecure hashing algorithms" shortName="InsecureHashInspection" implementationClass="security.validators.InsecureHashInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="PW100: Comparing secrets and passwords insecurely" shortName="TimingAttackInspection" implementationClass="security.validators.TimingAttackInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="JJ100: Use of unsanitized Jinja2 Templates" shortName="JinjaAutoinspectInspection" implementationClass="security.validators.JinjaAutoinspectInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="PW101: Hardcoded passwords and secrets" shortName="HardcodedPasswordInspection" implementationClass="security.validators.HardcodedPasswordInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="EX100: Use of builtin exec() function" shortName="BuiltinExecInspection" implementationClass="security.validators.BuiltinExecInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="MK100: Use of unsanitized Mako Templates" shortName="MakoTemplateInspection" implementationClass="security.validators.MakoTemplateInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="SQL100: Possible SQL injection" shortName="SqlInjectionInspection" implementationClass="security.validators.SqlInjectionInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" level="WEAK WARNING" displayName="AST100: Use of asserts in non-test files" shortName="AssertInspection" implementationClass="security.validators.AssertInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" level="WEAK WARNING" displayName="TRY100: Except block only containing a pass statement" shortName="TryExceptPassInspection" implementationClass="security.validators.TryExceptPassInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" level="WEAK WARNING" displayName="TRY101: Except block only containing a continue statement" shortName="TryExceptContinueInspection" implementationClass="security.validators.TryExceptContinueInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="PAR100: Paramiko set to automatically trust the host key" shortName="ParamikoHostkeyBypassInspection" implementationClass="security.validators.ParamikoHostkeyBypassInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" level="WEAK WARNING" displayName="NET100: Possible service binding to all network interfaces" shortName="BindAllInterfacesInspection" implementationClass="security.validators.BindAllInterfacesInspection" />
        <localInspection language="Python" enabledByDefault="true" groupName="Python Security" hasStaticDescription="true" displayName="OS100: Call to os.chmod setting permission values" shortName="OsChmodInspection" implementationClass="security.validators.OsChmodInspection" />

    </extensions>
    <extensions defaultExtensionNs="Pythonid">
    </extensions>
    <actions>
        <action id="Security.CheckSafetyDB" class="security.packaging.SafetyDbCheckerAction" text="Check Python Package Security" description="Check the installed Python packages for any known vulnerabilities." >
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <add-to-group group-id="PyPackagingMenu" anchor="last"/>
        </action>
    </actions>
</idea-plugin>